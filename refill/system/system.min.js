function chkEvent(e) {
 var t;
 window.event ? t = window.event.keyCode : e && (t = e.which), 13 == t && setTimeout(function() {
  doCallAjaxLogin()
 }, 5)
}

function text_only(e) {
 var t;
 if (!e) e = window.event;
 e.keyCode ? t = e.keyCode : e.which && (t = e.which);
 var a = String.fromCharCode(t);
 return !!/^[A-Za-z\d]+$/.test(a)
}

function genRef() {
 /*var returnRef = userid.length > 9 && (userid = userid.substring(0, 9)), "" + userid + (now.getFullYear() - 2e3) + (now.getMonth() + 1) + now.getDate() + (Math.floor(89999 * Math.random()) + 1e4);
 if(returnRef.length > 15){
	returnRef = returnRef.substring(0, 14);
 }
 return returnRef;*/
 const length = 15;
 return Math.floor(Math.pow(10, length-1) + Math.random() * 9 * Math.pow(10, length-1));
}

function _imageEncode (arrayBuffer) {
    let u8 = new Uint8Array(arrayBuffer)
    let b64encoded = btoa([].reduce.call(new Uint8Array(arrayBuffer),function(p,c){return p+String.fromCharCode(c)},''))
    let mimetype="image/jpeg"
    return "data:"+mimetype+";base64,"+b64encoded
}

async function FunctionPromptPay(e) {
    const refNo = genRef(), reqData = new URLSearchParams();
    reqData.append('token', gbpay_token);
    reqData.append('amount', e);
    reqData.append('referenceNo', refNo);
    reqData.append('backgroundUrl', gbpay_cb_promtpay);

    reqData.append('detail', 'promptpay-' + e);
    reqData.append('customerName', userid);
    reqData.append('merchantDefined1', accountid);
    reqData.append('merchantDefined2', gbpay_desc2);
    reqData.append('merchantDefined3', gbpay_desc3);
    reqData.append('merchantDefined4', gbpay_desc4);
    reqData.append('merchantDefined5', gbpay_desc5);

    axios.post(gbpay_domain + "/gbp/gateway/qrcode", reqData, {
        responseType: 'arraybuffer',
        headers: {
            'content-type': 'application/x-www-form-urlencoded',
        },
    }).then(res => {
        if(res.status === 200){
            const base64Img = _imageEncode(res.data);

            Swal.fire({
                title: "กรุณารอซักครู่!",
                showCancelButton: !1,
                showLoaderOnConfirm: !1,
                allowOutsideClick: !1,
                allowEscapeKey: !1
            }), Swal.showLoading();

            var a = new Image;
            a.onload = function() {
                Swal.hideLoading(), Swal.fire({
                    title: 'ระบบอัตโนมัติ',
                    html: "<b style='color:red;'>1 QR Code ใช้ได้แค่ 1 ครั้งห้ามใช้ซ้ำ</b><br>เมื่อโอนเงินสำเร็จ ระบบจะทำรายการอัตโนมัติ สามารถปิดกล่องนี้ได้เลย",
                    imageUrl: base64Img,
                    confirmButtonColor: "#3085d6",
                    confirmButtonText: "ปิด",
                    allowOutsideClick: !1,
                    allowEscapeKey: !1,
                });
            }, a.src = base64Img;
        }else{
            console.log(res);
            Swal.fire({
                type: 'error',
                title: 'API ERROR!',
                text: 'พบข้อผิดพลาด! กรุณาติดต่อผู้ดูแลระบบ!',
            });
        }
    }).catch(err => {
        console.log(err);
        Swal.fire({
            type: 'error',
            title: 'API ERROR!',
            text: 'พบข้อผิดพลาด! กรุณาติดต่อผู้ดูแลระบบ!',
        });
    });
}

// function FunctionTrueWallet(e) {
//     const refNo = genRef(), reqData = new URLSearchParams();

//     reqData.append('publicKey', '');
//     reqData.append('amount', 1);
//     reqData.append('referenceNo', refNo);
//     reqData.append('backgroundUrl', gbpay_cb_truewallet);
//     reqData.append('responseUrl', gbpay_rd_truewallet);

//     reqData.append('detail', 'truewallet-' + e);
//     reqData.append('customerName', userid);
//     reqData.append('merchantDefined1', accountid);
//     reqData.append('merchantDefined2', gbpay_desc2);
//     reqData.append('merchantDefined3', gbpay_desc3);
//     reqData.append('merchantDefined4', gbpay_desc4);
//     reqData.append('merchantDefined5', gbpay_desc5);

//     Swal.fire({
//         title: 'กรุณากรอกเบอร์ TrueWallet',
//         input: 'text',
//         inputAttributes: {
//             minlength: 10,
//             maxlength: 10,
//             autocapitalize: 'off',
//             autocorrect: 'off'
//         },
//         inputValidator: (val) => {
//             if(!val || val.length !== 10 || isNaN(val)){
//                 return 'กรุณากรอกเบอร์โทรศัพท์ 10 หลัก!';
//             }
//         },
//         showCancelButton: 1,
//         confirmButtonText: 'รับ OTP ชำระเงิน!',
//         cancelButtonText: 'ยกเลิก',
//         showLoaderOnConfirm: 1,
//         allowOutsideClick: !1,
//         allowEscapeKey: !1,
//         preConfirm: (customerTelephone) => {
//             if(customerTelephone && customerTelephone.length === 10){
//                 reqData.append('customerTelephone', customerTelephone);
//                 reqData.append('checksum', trueWalletCheckSum(e, refNo, gbpay_rd_truewallet, gbpay_cb_truewallet));

//                 axios.post(gbpay_domain + "/v1/truewallet", reqData, {
//                     headers: {
//                         'content-type': 'application/x-www-form-urlencoded',
//                     },
//                 }).then(res => {
//                     if(res){

//                     }else{
//                         console.log(res);
//                         Swal.fire({
//                             type: 'error',
//                             title: 'API ERROR!',
//                             text: 'พบข้อผิดพลาด! กรุณาติดต่อผู้ดูแลระบบ!',
//                         });
//                     }
//                 }).catch(err => {
//                     console.log(err);
//                     Swal.fire({
//                         type: 'error',
//                         title: 'API ERROR!',
//                         text: 'พบข้อผิดพลาด! กรุณาติดต่อผู้ดูแลระบบ!',
//                     });
//                 });
//             }else{
//                 return FunctionTrueWallet(e);
//             }
//         },
//     });
// }

function trueWalletCheckSum(e, ref, res, bg){
    var htxt = CryptoJS.HmacSHA256(e + ref + res + bg, "ylTGm0xRx5HE9w4RQmoKsaVvgYgbol10");
    var chs = CryptoJS.enc.Base64.stringify(htxt);
    return chs;
}

window.onload = function() {
 function e(e) {
  return e.stopPropagation ? e.stopPropagation() : window.event && (window.event.cancelBubble = !0), e.preventDefault(), !1
 }
 $(document).ready(function() {
  $("#historyTM").hide(), $("#history").hide(), $('#summary').hide(), $("#cha").hide(), $("#exchangeTMT").hide(), $("#exchangePayT").hide()
 }), document.addEventListener("contextmenu", function(e) {
  e.preventDefault()
 }, !1), document.addEventListener("keydown", function(t) {
  t.ctrlKey && t.shiftKey && 73 == t.keyCode && e(t), t.ctrlKey && t.shiftKey && 74 == t.keyCode && e(t), 83 == t.keyCode && (navigator.platform.match("Mac") ? t.metaKey : t.ctrlKey) && e(t), t.ctrlKey && 85 == t.keyCode && e(t), 123 == event.keyCode && e(t)
 }, !1)
}, $(document).ready(function() {
 $("#pay").click(function() {
  $("#info").hide(), $("#historyTM").hide(), $("#history").show(), $('#summary').hide(), $("#exchange").hide(), $("#exchangeTMTZ").hide()
 }), $("#true").click(function() {
  $("#history").hide(), $('#summary').hide(), $("#exchange").hide(), $("#exchangeTMT").hide(), $("#exchangeTMTZ").hide(), $("#exchangePayT").hide(), $("#cha").show()
 }), $("#cha").click(function() {
  $("#history").hide(), $('#summary').hide(), $("#historyTM").hide(), $("#cha").hide(), $("#info").show(), $("#exchangeTMT").hide(), $("#exchangeTMTZ").hide(), $("#exchangePayT").hide()
 }), $("#exchangePay").click(function() {
  $("#history").hide(), $('#summary').hide(), $("#historyTM").hide(), $("#exchange").show(), $("#exchangeTMTZ").show()
 }), $('#summary_btn').click(function () {
    $("#history").hide(), $('#summary').show(), $("#historyTM").hide(), $("#exchange").hide(), $("#exchangeTMTZ").hide()
 })
});
var HttPRequest = !1;

function doCallAjaxLogin() {
 var e = document.getElementById("txtUsername").value,
  t = document.getElementById("txtPassword").value;
 if ("" == e) Swal.fire({
  type: "warning",
  title: "แจ้งเตือน",
  text: "กรุณากรอก Account ID!"
 });
 else if ("" == t) Swal.fire({
  type: "warning",
  title: "แจ้งเตือน",
  text: "กรุณากรอก Password!"
 });
 else {
  if (HttPRequest = !1, window.XMLHttpRequest)(HttPRequest = new XMLHttpRequest).overrideMimeType && HttPRequest.overrideMimeType("text/html");
  else if (window.ActiveXObject) try {
   HttPRequest = new ActiveXObject("Msxml2.XMLHTTP")
  } catch (e) {
   try {
    HttPRequest = new ActiveXObject("Microsoft.XMLHTTP")
   } catch (e) {}
  }
  if (!HttPRequest) return alert("Cannot create XMLHTTP instance"), !1;
  var a = "tUsername=" + encodeURI(document.getElementById("txtUsername").value) + "&tPassword=" + encodeURI(document.getElementById("txtPassword").value);
  $.ajax({
   type: "POST",
   data: a,
   url: "../function/check_login.php",
   success: function(e) {
    "error" == e ? Swal.fire({
     type: "error",
     title: "เกิดข้อผิดพลาด",
     text: "กรุณาตรวจสอบ ID หรือ Password ของคุณ!"
    }) : (Swal.fire({
     type: "success",
     title: "สำเร็จ",
     text: "กำลังพาท่านเข้าสู่ระบบ!",
     showConfirmButton: !1,
     timer: 1500
    }), Swal.showLoading(), setTimeout(function() {
     window.location = "../member/member.php"
    }, 2e3))
   }
  })
 }
}

function doCallAjaxRegister() {
    var e = document.getElementById("txtUsername").value,
     t = document.getElementById("txtPassword").value;
    if ("" == e) Swal.fire({
     type: "warning",
     title: "แจ้งเตือน",
     text: "กรุณากรอก Account ID!"
    });
    else if ("" == t) Swal.fire({
     type: "warning",
     title: "แจ้งเตือน",
     text: "กรุณากรอก Password!"
    });
    else {
     if (HttPRequest = !1, window.XMLHttpRequest)(HttPRequest = new XMLHttpRequest).overrideMimeType && HttPRequest.overrideMimeType("text/html");
     else if (window.ActiveXObject) try {
      HttPRequest = new ActiveXObject("Msxml2.XMLHTTP")
     } catch (e) {
      try {
       HttPRequest = new ActiveXObject("Microsoft.XMLHTTP")
      } catch (e) {}
     }
     if (!HttPRequest) return alert("Cannot create XMLHTTP instance"), !1;
     var a = "tUsername=" + encodeURI(document.getElementById("txtUsername").value) + "&tPassword=" + encodeURI(document.getElementById("txtPassword").value);
     $.ajax({
      type: "POST",
      data: a,
      url: "../function/register.php",
      success: function(e) {
       "error" == e ? Swal.fire({
        type: "error",
        title: "เกิดข้อผิดพลาด",
        text: "กรุณาตรวจสอบ ID ของคุณ! และ ID อาจมีผู้ใช้งานแล้ว !"
       }) : (Swal.fire({
        type: "success",
        title: "สำเร็จ",
        text: "กำลังพาท่านเข้าสู่ระบบ!",
        showConfirmButton: !1,
        timer: 1500
       }), Swal.showLoading(), setTimeout(function() {
        window.location = "../member/member.php"
       }, 2e3))
      }
     })
    }
   }

function doCallAjaxLogout() {
 $.ajax({
  type: "POST",
  data: "",
  url: "../member/logout.php",
  success: function(e) {
   e && (Swal.fire({
    type: "success",
    title: "สำเร็จ",
    text: "กำลังพาท่านออกจากระบบ!",
    showConfirmButton: !1,
    timer: 1500
   }), Swal.showLoading(), setTimeout(function() {
    window.location.replace("../member/")
   }, 2e3))
  }
 })
}

function copyText(eleid) {
    // Get the text field
    var copyText = document.getElementById(eleid);

    // Select the text field
    copyText.select();
    copyText.setSelectionRange(0, 99999); // For mobile devices

     // Copy the text inside the text field
    navigator.clipboard.writeText(copyText.value);

    // Alert the copied text
    alert("Copied License: " + copyText.value);
}
